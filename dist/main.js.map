{"version":3,"file":"main.js","mappings":"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","sources":["webpack://1111/./src/index.js"],"sourcesContent":["const myCanvas = document.getElementById(\"myCanvas\");\nmyCanvas.width = 300;\nmyCanvas.height = 300;\nconst ctx = myCanvas.getContext(\"2d\");\n\nfunction getRandomNumber(min, max) {\n    return Math.round(Math.random() * (max - min + 1) + min)\n}\n\nfunction getRandomNumberFloor(min, max) {\n    return Math.random() * (max - min + 1) + min\n}\n\nlet myVinyls = []\nmyVinyls.length = getRandomNumber(1, 7)\nfor (i = 0; i < myVinyls.length; i++) {\n    myVinyls[i] = getRandomNumber(1, 7)\n}\nconsole.log(\"начальный\", myVinyls)\n\nmyCanvas.addEventListener(\"click\", () => {\n    myDougnutChart.clear()\n    myVinyls.length = getRandomNumber(1, 7)\n    for (i = 0; i < myVinyls.length; i++) {\n        myVinyls[i] = getRandomNumber(1, 7)\n    }\n    console.log(\"после клика\", myVinyls)\n    myDougnutChart.draw();\n})\n\nfunction drawPieSlice(ctx, centerX, centerY, radius, startAngle, endAngle, color) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n    ctx.closePath();\n    ctx.fill();\n}\n\nvar Piechart = function (options) {\n    this.options = options;\n    this.canvas = options.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.colors = options.colors;\n    this.draw = function () {\n        myCanvas.width = 300;\n        myCanvas.height = 300;\n        var total_value = 0;\n        var color_index = 0;\n        for (var categ in this.options.data) {\n            var val = this.options.data[categ];\n            total_value += val;\n        }\n        var start_angle = 0;\n        for (categ in this.options.data) {\n            val = this.options.data[categ];\n            var slice_angle = 2 * Math.PI * val / total_value;\n            drawPieSlice(\n                this.ctx,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                Math.min(this.canvas.width / getRandomNumberFloor(1, 2), this.canvas.height / getRandomNumberFloor(2, 4)),\n                start_angle,\n                start_angle + slice_angle,\n                this.colors[color_index % this.colors.length]\n            );\n            start_angle += slice_angle;\n            color_index++;\n        }\n        if (this.options.doughnutHoleSize) {\n            drawPieSlice(\n                this.ctx,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                this.options.doughnutHoleSize * Math.min(this.canvas.width / 2, this.canvas.height / 2),\n                0,\n                2 * Math.PI,\n                \"#fff\"\n            );\n        }\n    }\n    this.clear = function () {\n        myCanvas.width = 0;\n        myCanvas.height = 0;\n        console.log(\"зачистка\")\n    }\n}\n\nvar myDougnutChart = new Piechart(\n    {\n        canvas: myCanvas,\n        data: myVinyls,\n        colors: [\"#937e88\", \"#EB5757\", \"#F2C94C\", \"#219653\", \"#56CCF2\", \"#2F80ED\", \"#6FCF97\", \"#9B51E0\"],\n        doughnutHoleSize: 0.1\n    }\n);\nmyDougnutChart.draw();"],"names":["myCanvas","document","getElementById","width","height","ctx","getContext","getRandomNumber","min","max","Math","round","random","getRandomNumberFloor","myVinyls","length","i","console","log","addEventListener","myDougnutChart","clear","draw","drawPieSlice","centerX","centerY","radius","startAngle","endAngle","color","fillStyle","beginPath","moveTo","arc","closePath","fill","Piechart","options","canvas","colors","total_value","color_index","categ","data","val","start_angle","slice_angle","PI","doughnutHoleSize"],"sourceRoot":""}